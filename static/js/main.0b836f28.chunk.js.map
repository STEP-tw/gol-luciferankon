{"version":3,"sources":["_src/utilLib.js","_src/gameOfLife.js","_src/lib.js","Cell.js","App.js","serviceWorker.js","index.js"],"names":["isWithin","topLeft","bottomRight","position","isGreaterOrEqual","element1","element2","makePositionRelative","module","exports","findHeightWidth","bounds","height","width","findPointInsideBoard","currGeneration","isWithinBound","bind","filter","findRelativeWorld","makePositionRelativeWith","map","require","initCells","updateGrid","generateInitialWorld","generateRelativeWorld","printBoard","nextGeneration","_findHeightWidth","grid","relativeWorld","updatedWorld","aliveCells","relativeTopLeft","x","i","j","push","updateCellWithInput","cells","element","inputs","reduce","possibleCombinations","generateAddCoordinates","currentPosition","delta","checkValidPosition","length","generateValidNeighbours","currPosition","checkNeighbourState","_validNeighbours$redu","neighbour","checkState","Object","_home_travis_build_STEP_tw_gol_luciferankon_gol_ui_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","checkNextState","neighbours","currentState","Array","fill","oldGrid","slice","r","c","nextState","line","y","row","concat","_home_travis_build_STEP_tw_gol_luciferankon_gol_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","join","HL","split","Cell","react_default","a","createElement","this","props","color","col","stroke","strokeWidth","Component","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","gen","_this2","timerID","setInterval","tick","setState","colors","src_Cell","genCells","forEach","cell","toColourLookup","className","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b836f28.chunk.js","sourcesContent":["const isWithin = function(topLeft,bottomRight,position){\n  return isGreaterOrEqual(position[0],topLeft[0]) &&\n         isGreaterOrEqual(bottomRight[0],position[0]) &&\n         isGreaterOrEqual(position[1],topLeft[1]) &&\n         isGreaterOrEqual(bottomRight[1],position[1]);\n}\n\nconst isGreaterOrEqual = function(element1, element2){\n  return element1 >= element2;\n}\n\nconst findRelativeWorld = function(currGeneration,bounds){\n  let makePositionRelativeWith = makePositionRelative.bind(null,bounds.topLeft);\n  return currGeneration.map(makePositionRelativeWith);\n}\n\nconst findPointInsideBoard = function(currGeneration,bounds){\n  let isWithinBound = isWithin.bind(null,bounds.topLeft,bounds.bottomRight);\n  return currGeneration.filter(isWithinBound);\n}\n\nconst makePositionRelative = function(topLeft,position){\n  return [position[0]-topLeft[0],position[1]-topLeft[1]];\n}\n\nconst findHeightWidth = function(bounds){\n  let height = bounds.bottomRight[0]-bounds.topLeft[0]+1;\n  let width = bounds.bottomRight[1]-bounds.topLeft[1]+1;\n  return {height: height, width : width};\n}\n\nmodule.exports = { isWithin, findHeightWidth, findPointInsideBoard, findRelativeWorld,isGreaterOrEqual, makePositionRelative };\n","const {\n  initCells,\n  generateInitialWorld,\n  updateGrid,\n  generateRelativeWorld,\n  printBoard\n} = require('./lib.js');\n\nconst {\n  isWithin,\n  findHeightWidth,\n  makePositionRelative,\n  findPointInsideBoard,\n  findRelativeWorld\n} = require('./utilLib.js');\n\nconst nextGeneration = function(currGeneration,bounds) {\n  let {height, width} = findHeightWidth(bounds);\n  let grid = initCells(height,width);\n  let relativeWorld  = generateRelativeWorld( grid, currGeneration, bounds);\n  let updatedWorld = updateGrid(relativeWorld);\n  let aliveCells = [];\n  let relativeTopLeft = bounds.topLeft.map( x => -x);\n  for(let i in updatedWorld){\n    for(let j in updatedWorld[i]){\n      if(updatedWorld[i][j]==1){\n        aliveCells.push([+i,+j]);\n      }\n    }\n  }\n  return aliveCells.map(makePositionRelative.bind(null,relativeTopLeft));\n}\n\nmodule.exports = { nextGeneration };\n","const ALIVE = 1;\nconst DEAD = 0;\n\nconst {\n  isWithin,\n  findRelativeWorld,\n  findPointInsideBoard\n} = require('./utilLib.js');\n\n\nconst initCells = function(height, width){\n  let cells = new Array(height).fill(width);\n  return cells.map( x => new Array(x).fill(0));\n}\n\nconst updateCellWithInput = function(cells,element){\n  cells[element[0]][element[1]]=1;\n  return cells;\n}\n\nconst generateInitialWorld = function(cells,inputs){\n  inputs.reduce(updateCellWithInput,cells);\n  return cells;\n}\n\nconst possibleCombinations = [[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];\n\nconst generateAddCoordinates = function(currentPosition){\n  return function(delta){\n    let rowIndex = currentPosition[0]+delta[0];\n    let columnIndex = currentPosition[1]+delta[1];\n    return [rowIndex,columnIndex];\n  }\n}\n\nconst checkValidPosition = function(grid){\n  return function(position){\n    let topLeft = [0,0];\n    let bottomRight = [grid.length-1,grid[0].length-1];\n    return isWithin(topLeft,bottomRight,position);\n  }\n}\n\nconst generateValidNeighbours = function(grid,currPosition){\n  let possibleNeighbours = possibleCombinations.map(generateAddCoordinates(currPosition));\n  return possibleNeighbours.filter(checkValidPosition(grid));\n}\n\nconst checkState = function(grid){\n  return function(neighbour,position){\n    let state = grid[position[0]][position[1]];\n    neighbour[state].push(position);\n    return neighbour;\n  }\n}\n\nconst checkNeighbourState = function(grid,position){\n  let validNeighbours = generateValidNeighbours( grid , position );\n  return validNeighbours.reduce( checkState(grid) , { [ALIVE] : [] , [DEAD] : [] });\n}\n\nconst checkNextState = function(neighbours,currentState){\n  let aliveNeighbours = neighbours[ALIVE].length;\n  let cellRules = [0,0,currentState,1,0,0,0,0,0];\n  return cellRules[aliveNeighbours];\n}\n\nconst updateGrid = function(oldGrid){\n  let grid = oldGrid.map( x => x.slice() );\n  for(let r=0; r < oldGrid.length; r++){\n    for(let c=0; c < oldGrid[r].length; c++){\n      let neighbours = checkNeighbourState( oldGrid , [r,c]);\n      let nextState = checkNextState( neighbours, oldGrid[r][c]);\n      grid[r][c] = nextState;\n    }\n  }\n  return grid;\n}\n\nconst generateRelativeWorld = function(grid,currGeneration,bounds){\n  currGeneration = findPointInsideBoard(currGeneration,bounds);\n  currGeneration = findRelativeWorld(currGeneration,bounds);\n  let world = generateInitialWorld(grid,currGeneration);\n  return world;\n}\n\nconst printBoard = function(grid){\n  const toRow = function(row){\n    return ['',...row,''].join(' | ');\n  }\n  let board = grid.map( x => x.map( y => (y && '█')|| ' '));\n  let line = board.map(toRow);\n  let HL = new Array(4*grid[0].length+2).fill('-').join('');\n  line = line.join('\\n'+HL+'\\n').split('\\n');\n  return [HL,...line,HL].join('\\n');\n}\n\nmodule.exports = { \n  initCells,\n  generateInitialWorld,\n  generateValidNeighbours,\n  checkValidPosition,\n  generateAddCoordinates,\n  checkNeighbourState,\n  checkNextState,\n  updateGrid,\n  updateCellWithInput,\n  generateRelativeWorld,\n  printBoard,\n};\n","import React, { Component } from 'react';\n\nclass Cell extends Component {\n  render() {\n    return <rect width=\"10\" \n    height=\"10\"\n    fill={this.props.color || \"white\"}\n    x={this.props.col*10} \n    y={this.props.row*10} \n    stroke=\"lightgray\" \n    strokeWidth={1}></rect>\n  }\n}\n\nexport default Cell;","import React, { Component } from 'react';\nimport Cell from './Cell';\nconst {nextGeneration} = require('./_src/gameOfLife.js');\n\nconst genId = (a) => a.join(\"_\");\n\nconst genCells = (colors) => {\n  let cells = [];\n  for(let i=0;i<17;i++) {\n    for(let j=0;j<17;j++) {\n      cells.push(<Cell row={i} col={j} color={colors[`${i}_${j}`]}/>);\n    }\n  }\n  return cells;\n}\n\nconst toColourLookup=(cells) => {\n  let colors={};\n  cells.forEach(cell => {\n    colors[genId(cell)]=\"black\"\n  });\n  return colors;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {gen: this.props.gen};\n  }\n  componentDidMount() {\n    this.timerID = setInterval(()=>this.tick(),180)\n  }\n  tick() {\n    this.setState((state,props)=>{\n      let newState=nextGeneration(state.gen,{topLeft:[0,0],bottomRight:[17,17]});\n      return {gen:newState};\n    });\n  }\n  render() {\n    let colors=toColourLookup(this.state.gen)\n    let cells=genCells(colors);\n    return (\n      <div className=\"App\">\n        <svg width={800} height={800}>\n          {cells}\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst coords=[ [ 1, 5 ],\n[ 1, 11 ],\n[ 2, 5 ],\n[ 2, 11 ],\n[ 3, 5 ],\n[ 3, 6 ],\n[ 3, 10 ],\n[ 3, 11 ],\n[ 5, 1 ],\n[ 5, 2 ],\n[ 5, 3 ],\n[ 5, 6 ],\n[ 5, 7 ],\n[ 5, 9 ],\n[ 5, 10 ],\n[ 5, 13 ],\n[ 5, 14 ],\n[ 5, 15 ],\n[ 6, 3 ],\n[ 6, 5 ],\n[ 6, 7 ],\n[ 6, 9 ],\n[ 6, 11 ],\n[ 6, 13 ],\n[ 7, 5 ],\n[ 7, 6 ],\n[ 7, 10 ],\n[ 7, 11 ],\n[ 9, 5 ],\n[ 9, 6 ],\n[ 9, 10 ],\n[ 9, 11 ],\n[ 10, 3 ],\n[ 10, 5 ],\n[ 10, 7 ],\n[ 10, 9 ],\n[ 10, 11 ],\n[ 10, 13 ],\n[ 11, 1 ],\n[ 11, 2 ],\n[ 11, 3 ],\n[ 11, 6 ],\n[ 11, 7 ],\n[ 11, 9 ],\n[ 11, 10 ],\n[ 11, 13 ],\n[ 11, 14 ],\n[ 11, 15 ],\n[ 13, 5 ],\n[ 13, 6 ],\n[ 13, 10 ],\n[ 13, 11 ],\n[ 14, 5 ],\n[ 14, 11 ],\n[ 15, 5 ],\n[ 15, 11 ] ];\nReactDOM.render(<App gen={coords}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}